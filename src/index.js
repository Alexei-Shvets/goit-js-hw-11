import './sass/main.scss';

import scroll from './js/scroll';
import arrowToTop from './js/lift-up';

import fetchPixabay from './js/fetch-pixabay';
import cardTemplate from './template-card.hbs';
import { Notify } from 'notiflix/build/notiflix-notify-aio';
import SimpleLightbox from 'simplelightbox';
import 'simplelightbox/dist/simple-lightbox.min.css';

//—Å—Ç—É—á—É—Å—å –∫ —î–ª–µ–º–µ–Ω—Ç–∞–º —Ä–∞–∑–º–µ—Ç–∫–∏//
const refs = {
  searchForm: document.querySelector('#search-form'),
  gallery: document.querySelector('.gallery'),
  loadMoreBtn: document.querySelector('.load-more'),
  goTopBtn: document.querySelector('.lift_up'),
  endcollectionText: document.querySelector('.end-collection-quote'),
};

//–≤—ã–∑–æ–≤ –ª–∏—Ñ—Ç–∞ –≤–≤–µ—Ä—Ö//
arrowToTop();

refs.searchForm.addEventListener('submit', onFormSubmit);
let searchingData = '';
let page = 1;
let perPage = 0;

async function onFormSubmit(e) {
  e.preventDefault();

  searchingData = e.currentTarget.searchQuery.value;
  page = 1;
  if (searchingData.trim() === '') {
    Notify.failure('–ù–µ–∞, –≤–æ–∑–¥—É—Ö —è –∏—Å–∫–∞—Ç—å –Ω–µ –±—É–¥—É üò∫');
    return;
  }
  const response = await fetchPixabay(searchingData, page);
  perPage = response.hits.length;

  if (response.totalHits <= perPage) {
    addISHidden();
  } else {
    removeIsHidden();
  }

  if (response.totalHits === 0) {
    clearGalleryHTML();
    refs.endcollectionText.classList.add('is-hidden');
    Notify.failure('–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –∑–∞–ø—Ä–æ—Å, –ø—Ä–∞–≤–¥–∞, –Ω–æ —Ç–∞–∫–æ–µ –∏—â–∏ —Å–∞–º üí©');
  }
  try {
    if (response.totalHits > 0) {
      Notify.info(
        `–¢—ã —Å—á–∞—Å—Ç–ª–∏–≤—á–∏–∫! –û—Ç–≥—Ä—É–∂–∞—é ${response.totalHits} –µ–¥–∏–Ω–∏—Ü –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ‚ú®`
      );
      clearGalleryHTML();
      renderCard(response.hits);
      formAdd.reset();
    }
  } catch (error) {
    console.log(error);
  }
}

//–∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞//
refs.loadMoreBtn.addEventListener('click', loadMore);

async function loadMore() {
  try {
    refs.loadMoreBtn.disabled = true;
    pageIncrement();
    const response = await fetchPixabay(searchingData, page);

    renderCard(response.hits);
    perPage += response.hits.length;
    scroll();

    if (perPage >= response.totalHits) {
      Notify.failure('–ú—ã –∑–∞—à–ª–∏ –≤ —Ç—É–ø–∏–∫. –ö–∞—Ä—Ç–∏–Ω–æ—á–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å üö©');
      addISHidden();
    }
    refs.loadMoreBtn.disabled = false;
  } catch (error) {
    console.log(error);
  }
}
//–ê–ü–ò—à–∫–∞//
function addISHidden() {
  refs.loadMoreBtn.classList.add('is-hidden');
  refs.endcollectionText.classList.remove('is-hidden');
}
function removeIsHidden() {
  refs.loadMoreBtn.classList.remove('is-hidden');
  refs.endcollectionText.classList.add('is-hidden');
}
function pageIncrement() {
  page += 1;
}
function clearGalleryHTML() {
  refs.gallery.innerHTML = '';
}
function lightbox() {
  let lightbox = new SimpleLightbox('.gallery a', {
    captions: true,
    captionsData: 'alt',
    captionPosition: 'bottom',
    captionDelay: 250,
  });
  lightbox.refresh();
}
function renderCard(array) {
  const cardMarkup = array.map(item => cardTemplate(item)).join('');
  refs.gallery.insertAdjacentHTML('beforeend', cardMarkup);
  lightbox();
}
